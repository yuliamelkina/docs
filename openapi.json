{"openapi":"3.0.0","paths":{"/":{"get":{"operationId":"AppController_getHello","parameters":[],"responses":{"200":{"description":""}},"tags":["App"]}},"/customers":{"post":{"operationId":"CustomersController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"Customer object to be created (individual only)","content":{"application/json":{"schema":{"type":"string"},"examples":{"individual":{"value":{"type":"individual","first_name":"John","last_name":"Doe","email":"john.doe@example.com","birth_date":"1990-01-01","residential_address":{"street_line_1":"123 Main Street","city":"Portland","subdivision":"US-ME","postal_code":"04101","country":"USA"},"identifying_information":[{"type":"ssn","issuing_country":"USA","number":"123-45-6789"}],"endorsements":["base"],"signed_agreement_id":"agr_test_abc123xyz"}}}}}},"responses":{"201":{"description":"Customer object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponseDto"}}}},"400":{"description":"Validation error."},"409":{"description":"Idempotency key conflict."}},"summary":"Create a new customer","tags":["Customers"]},"get":{"operationId":"CustomersController_list","parameters":[],"responses":{"200":{"description":""}},"summary":"List customers","tags":["Customers"]}},"/customers/{customerId}":{"get":{"operationId":"CustomersController_findOne","parameters":[],"responses":{"200":{"description":""}},"summary":"Get customer and check KYC status","tags":["Customers"]},"put":{"operationId":"CustomersController_update","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCustomerDto"}}}},"responses":{"200":{"description":""}},"summary":"Update customer","tags":["Customers"]}},"/customers/mock-create":{"post":{"description":"Creates a customer with randomly generated data using faker. Hidden in production.","operationId":"CustomersController_createMockCustomer","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"responses":{"201":{"description":"Mock customer created successfully with generated data."},"403":{"description":"Endpoint not available in production."}},"summary":"ðŸ§ª Create customer with mock data (Dev Only)","tags":["Customers","Development Tools"]}},"/customers/{customerId}/wallets":{"post":{"operationId":"WalletsController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"example":{"chain":"solana"}}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletResponseDto"}}}}},"summary":"Create a new custodial wallet for a customer","tags":["Wallets"]},"get":{"operationId":"WalletsController_listForCustomer","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletsListResponseDto"}}}}},"summary":"List wallets for a customer","tags":["Wallets"]}},"/customers/{customerId}/wallets/{walletId}":{"get":{"operationId":"WalletsController_getWallet","parameters":[{"name":"walletId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WalletResponseDto"}}}}},"summary":"Get a wallet and balances for a customer","tags":["Wallets"]}},"/customers/{customerId}/virtual_accounts":{"post":{"operationId":"VirtualAccountsController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"ACH/Wireâ†’Crypto virtual account configuration","content":{"application/json":{"schema":{"type":"string"},"examples":{"ach_to_solana":{"value":{"source":{"currency":"usd"},"destination":{"payment_rail":"solana","currency":"usdc","address":"targetSolanaAddress1111111111111111111111111111"},"developer_fee_percent":"0.5"}}}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualAccountResponseDto"}}}}},"summary":"Create a virtual account","tags":["Virtual Accounts"]},"get":{"operationId":"VirtualAccountsController_list","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VirtualAccountResponseDto"}}}}}},"summary":"List virtual accounts for customer","tags":["Virtual Accounts"]}},"/customers/{customerId}/virtual_accounts/{virtualAccountId}":{"get":{"operationId":"VirtualAccountsController_get","parameters":[{"name":"virtualAccountId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VirtualAccountResponseDto"}}}}},"summary":"Get virtual account by id","tags":["Virtual Accounts"]}},"/transfers":{"post":{"operationId":"TransfersController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"Transfer object to be created","content":{"application/json":{"schema":{"type":"string"},"examples":{"ach_onramp_to_solana":{"summary":"ACH onramp to Solana USDC","value":{"amount":"75.0","on_behalf_of":"cust_123","source":{"payment_rail":"ach_push","currency":"usd"},"destination":{"payment_rail":"solana","currency":"usdc","to_address":"SolanaDest111111111111111111111111111","wallet_id":"wallet_123"}}},"crypto_offramp_to_ach":{"summary":"Crypto (Ethereum USDC) â†’ ACH","value":{"amount":"100.0","on_behalf_of":"cust_123","source":{"payment_rail":"ethereum","currency":"usdc","from_address":"0x71C7656EC7ab88b098defB751B7401B5f6d8976F"},"destination":{"payment_rail":"ach","currency":"usd","external_account_id":"ext_123"}}},"flexible_amount":{"summary":"Flexible amount transfer (omit amount)","value":{"on_behalf_of":"cust_123","source":{"payment_rail":"sepa","currency":"eur"},"destination":{"payment_rail":"ethereum","currency":"usdc","to_address":"0xb794f5ea0ba39494ce839613fffba74279579268"},"features":{"flexible_amount":true}}}}}}},"responses":{"201":{"description":""}},"summary":"Create a transfer","tags":["Transfers"]},"get":{"operationId":"TransfersController_list","parameters":[],"responses":{"200":{"description":""}},"summary":"List transfers","tags":["Transfers"]}},"/transfers/{transferId}":{"get":{"operationId":"TransfersController_get","parameters":[{"name":"transferId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferResponseDto"}}}}},"summary":"Get a transfer by id","tags":["Transfers"]}},"/customers/{customerId}/liquidation_addresses":{"post":{"operationId":"LiquidationAddressesController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"oneOf":[{"example":{"chain":"ethereum","currency":"usdc","destination_payment_rail":"wire","destination_currency":"usd","external_account_id":"ext_123","custom_developer_fee_percent":"0.25"}},{"example":{"chain":"solana","currency":"usdc","destination_payment_rail":"solana","destination_currency":"usdc","destination_address":"SolanaDest111111111111111111111111111"}}]}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LiquidationAddressResponseDto"}}}}},"summary":"Create a liquidation address for a customer","tags":["Liquidation Addresses"]},"get":{"operationId":"LiquidationAddressesController_list","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LiquidationAddressResponseDto"}}}}}},"summary":"List liquidation addresses for a customer","tags":["Liquidation Addresses"]}},"/customers/{customerId}/liquidation_addresses/{liquidationAddressId}/drains":{"get":{"operationId":"LiquidationAddressesController_listDrains","parameters":[{"name":"liquidationAddressId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LiquidationDrainResponseDto"}}}}}},"summary":"Get drain history of a liquidation address","tags":["Liquidation Addresses"]}},"/customers/{customerId}/liquidation_addresses/{liquidationAddressId}":{"get":{"operationId":"LiquidationAddressesController_get","parameters":[{"name":"liquidationAddressId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LiquidationAddressResponseDto"}}}}},"summary":"Get liquidation address by id","tags":["Liquidation Addresses"]}},"/customers/{customerId}/external_accounts":{"post":{"operationId":"ExternalAccountsController_create","parameters":[{"name":"Idempotency-Key","required":false,"in":"header","description":"UUID for request idempotency (auto-generated in development if not provided)","schema":{"type":"string"}}],"requestBody":{"required":true,"description":"Bank account details (US banks only)","content":{"application/json":{"schema":{"type":"string"},"examples":{"us_checking":{"value":{"currency":"usd","account_type":"us","bank_name":"Lead Bank","account_name":"John Checking Account","first_name":"John","last_name":"Doe","account_owner_type":"individual","account_owner_name":"John Doe","account":{"routing_number":"101019644","account_number":"215268129123","checking_or_savings":"checking"},"address":{"street_line_1":"923 Folsom Street","country":"USA","state":"CA","city":"San Francisco","postal_code":"94107"}}}}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExternalAccountResponseDto"}}}}},"summary":"Add a bank account for withdrawals","tags":["External Accounts"]},"get":{"operationId":"ExternalAccountsController_list","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExternalAccountsListResponseDto"}}}}},"summary":"List bank accounts for customer","tags":["External Accounts"]}},"/customers/{customerId}/external_accounts/{externalAccountId}":{"get":{"operationId":"ExternalAccountsController_get","parameters":[{"name":"externalAccountId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExternalAccountResponseDto"}}}}},"summary":"Get bank account by id","tags":["External Accounts"]},"delete":{"operationId":"ExternalAccountsController_delete","parameters":[{"name":"externalAccountId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"Bank account removed successfully"}},"summary":"Remove bank account","tags":["External Accounts"]}}},"info":{"title":"Payment API","description":"\nAPI documentation for the payment processing service\n\n## Quick Start\n1. API-Key will be automatically set to \"test-api-key\" for testing\n2. Tenant-Id will be automatically set to test tenant UUID if not provided\n3. Idempotency-Key will be auto-generated for write operations if not provided\n\n## Headers\n- **Api-Key**: Your tenant API key (defaults to \"test-api-key\" in Swagger)\n- **Tenant-Id**: Your tenant UUID (defaults to test tenant UUID in Swagger)\n- **Idempotency-Key**: UUID for request idempotency (auto-generated if not provided)\n        ","version":"1.0","contact":{}},"tags":[],"servers":[{"url":"http://localhost:3000","description":"Development server"}],"components":{"securitySchemes":{"Api-Key":{"type":"apiKey","in":"header","name":"Api-Key","description":"Tenant API key (defaults to \"test-api-key\" in Swagger)"},"Tenant-Id":{"type":"apiKey","in":"header","name":"Tenant-Id","description":"Tenant UUID (defaults to test tenant UUID in Swagger)"},"Idempotency-Key":{"type":"apiKey","in":"header","name":"Idempotency-Key","description":"UUID for request idempotency (auto-generated if not provided)"}},"schemas":{"EndorsementDto":{"type":"object","properties":{"name":{"type":"string","enum":["base","sepa","ach","wire","swift","spei","ach_same_day","ach_push"]},"status":{"type":"string","enum":["incomplete","approved","revoked","pending","under_review","rejected"]},"additional_requirements":{"type":"array","items":{"type":"string"}}},"required":["name","status"]},"CustomerResponseDto":{"type":"object","properties":{"id":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"email":{"type":"string"},"status":{"type":"string","enum":["active","awaiting_questionnaire","awaiting_ubo","incomplete","not_started","offboarded","paused","rejected","under_review"]},"has_accepted_terms_of_service":{"type":"boolean","description":"Whether the customer has accepted the terms of service."},"rejection_reasons":{"description":"KYC rejection reasons","type":"array","items":{"type":"object"}},"requirements_due":{"type":"array","items":{"type":"string"}},"future_requirements_due":{"type":"array","items":{"type":"string"}},"endorsements":{"type":"array","items":{"$ref":"#/components/schemas/EndorsementDto"}},"created_at":{"type":"string"},"updated_at":{"type":"string"}},"required":["id","status"]},"AddressDto":{"type":"object","properties":{"street_line_1":{"type":"string","example":"123 Main Street","description":"Street address (minimum 4 characters)"},"street_line_2":{"type":"string","example":"Apt 2B","description":"Optional address line 2"},"city":{"type":"string","example":"Portland","description":"City name"},"subdivision":{"type":"string","example":"US-ME","description":"ISO 3166-2 subdivision code with country prefix (required for USA): US-CA, US-TX, US-ME, etc."},"postal_code":{"type":"string","example":"04101","description":"Postal code"},"country":{"type":"string","example":"USA","description":"ISO 3166-1 alpha-3 country code"}}},"UpdateCustomerDto":{"type":"object","properties":{"type":{"type":"string","enum":["individual","business"],"example":"individual","description":"Type of customer"},"first_name":{"type":"string","example":"John","description":"First name (2-1024 characters)"},"last_name":{"type":"string","example":"Doe","description":"Last name (2-1024 characters)"},"email":{"type":"string","example":"john.doe@example.com","description":"Email address"},"birth_date":{"type":"string","example":"1990-01-01","description":"Birth date in yyyy-mm-dd format (must be 18+)"},"residential_address":{"description":"Residential address","example":{"street_line_1":"123 Main Street","city":"Portland","subdivision":"US-ME","postal_code":"04101","country":"USA"},"allOf":[{"$ref":"#/components/schemas/AddressDto"}]},"identifying_information":{"description":"Tax identification and government documents","example":[{"type":"ssn","issuing_country":"USA","number":"123-45-6789"}],"type":"array","items":{"type":"object"}},"endorsements":{"type":"array","example":["base"],"description":"Endorsements to request","items":{"type":"string","enum":["base","sepa","ach","wire","swift","spei","ach_same_day","ach_push"]}},"signed_agreement_id":{"type":"string","example":"agr_test_1234567890abcdef","description":"ID of signed agreement (required for customer creation). Get from ToS acceptance flow.","minLength":1,"maxLength":1024}}},"WalletBalanceDto":{"type":"object","properties":{"balance":{"type":"string"},"currency":{"type":"string"},"chain":{"type":"string"},"contract_address":{"type":"string"}},"required":["balance","currency","chain"]},"WalletResponseDto":{"type":"object","properties":{"id":{"type":"string"},"chain":{"type":"string"},"address":{"type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"},"balances":{"type":"array","items":{"$ref":"#/components/schemas/WalletBalanceDto"}}},"required":["id","chain","address","created_at","updated_at"]},"WalletsListResponseDto":{"type":"object","properties":{"count":{"type":"number","description":"Total number of items in data"},"data":{"type":"array","items":{"$ref":"#/components/schemas/WalletResponseDto"}}},"required":["count","data"]},"VirtualAccountSourceDepositInstructionsDto":{"type":"object","properties":{"currency":{"type":"string"},"bank_name":{"type":"string"},"bank_address":{"type":"string"},"bank_routing_number":{"type":"string"},"bank_account_number":{"type":"string"},"bank_beneficiary_name":{"type":"string"},"bank_beneficiary_address":{"type":"string"},"payment_rail":{"type":"string"},"payment_rails":{"type":"array","items":{"type":"string"}}},"required":["currency","bank_name","bank_address","bank_routing_number","bank_account_number","bank_beneficiary_name","bank_beneficiary_address","payment_rail","payment_rails"]},"VirtualAccountDestinationDto":{"type":"object","properties":{"currency":{"type":"string"},"payment_rail":{"type":"string"},"address":{"type":"string"},"blockchain_memo":{"type":"string"}},"required":["currency","payment_rail","address"]},"VirtualAccountResponseDto":{"type":"object","properties":{"id":{"type":"string"},"status":{"type":"string"},"developer_fee_percent":{"type":"string"},"customer_id":{"type":"string"},"created_at":{"type":"string"},"source_deposit_instructions":{"$ref":"#/components/schemas/VirtualAccountSourceDepositInstructionsDto"},"destination":{"$ref":"#/components/schemas/VirtualAccountDestinationDto"}},"required":["id","status","customer_id","created_at","source_deposit_instructions","destination"]},"TransferEndpointSideDto":{"type":"object","properties":{"payment_rail":{"type":"string"},"currency":{"type":"string"},"from_address":{"type":"string"},"to_address":{"type":"string"},"external_account_id":{"type":"string"},"wallet_id":{"type":"string"},"wire_message":{"type":"string"},"sepa_reference":{"type":"string"},"swift_reference":{"type":"string"},"swift_charges":{"type":"string","enum":["our","sha"]},"ach_reference":{"type":"string"},"blockchain_memo":{"type":"string"}},"required":["payment_rail","currency"]},"TransferDepositInstructionsDto":{"type":"object","properties":{"payment_rail":{"type":"string"},"amount":{"type":"string"},"currency":{"type":"string"},"from_address":{"type":"string"},"to_address":{"type":"string"},"deposit_message":{"type":"string"},"bank_name":{"type":"string"},"bank_address":{"type":"string"},"bank_routing_number":{"type":"string"},"bank_account_number":{"type":"string"},"bank_beneficiary_name":{"type":"string"},"bank_beneficiary_address":{"type":"string"},"blockchain_memo":{"type":"string"}},"required":["payment_rail","amount","currency"]},"TransferReceiptDto":{"type":"object","properties":{"initial_amount":{"type":"string"},"developer_fee":{"type":"string"},"exchange_fee":{"type":"string"},"subtotal_amount":{"type":"string"},"gas_fee":{"type":"string"},"final_amount":{"type":"string"},"destination_tx_hash":{"type":"string"}},"required":["initial_amount","developer_fee","exchange_fee","subtotal_amount"]},"TransferResponseDto":{"type":"object","properties":{"id":{"type":"string"},"on_behalf_of":{"type":"string"},"amount":{"type":"string"},"developer_fee":{"type":"string"},"state":{"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","undeliverable","returned","refunded","error","canceled"]},"source":{"$ref":"#/components/schemas/TransferEndpointSideDto"},"destination":{"$ref":"#/components/schemas/TransferEndpointSideDto"},"source_deposit_instructions":{"$ref":"#/components/schemas/TransferDepositInstructionsDto"},"receipt":{"$ref":"#/components/schemas/TransferReceiptDto"},"created_at":{"type":"string"},"updated_at":{"type":"string"}},"required":["id","on_behalf_of","amount","state","source","destination","created_at","updated_at"]},"LiquidationAddressResponseDto":{"type":"object","properties":{"id":{"type":"string"},"chain":{"type":"string"},"address":{"type":"string"},"currency":{"type":"string"},"external_account_id":{"type":"string"},"destination_wire_message":{"type":"string"},"destination_payment_rail":{"type":"string"},"destination_currency":{"type":"string"},"destination_address":{"type":"string"},"blockchain_memo":{"type":"string"},"created_at":{"type":"string"},"updated_at":{"type":"string"}},"required":["id","chain","address","currency","created_at","updated_at"]},"LiquidationDrainDestinationDto":{"type":"object","properties":{"payment_rail":{"type":"string"},"currency":{"type":"string"},"to_address":{"type":"string"},"external_account_id":{"type":"string"},"imad":{"type":"string"},"trace_number":{"type":"string"}},"required":["payment_rail","currency"]},"LiquidationDrainResponseDto":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"string"},"currency":{"type":"string"},"state":{"type":"string","enum":["in_review","funds_received","payment_submitted","payment_processed","undeliverable","returned","refunded","error","canceled"]},"created_at":{"type":"string"},"destination":{"$ref":"#/components/schemas/LiquidationDrainDestinationDto"},"destination_tx_hash":{"type":"string"},"deposit_tx_hash":{"type":"string"}},"required":["id","amount","currency","state","created_at","destination"]},"ExternalAccountBankDetails":{"type":"object","properties":{"routing_number":{"type":"string","description":"Bank routing number"},"account_number_last_four":{"type":"string","description":"Last 4 digits of account number"}},"required":["routing_number","account_number_last_four"]},"ExternalAccountAddress":{"type":"object","properties":{"street_line_1":{"type":"string","description":"Primary street address"},"street_line_2":{"type":"string","description":"Secondary street address"},"country":{"type":"string","description":"Country code"},"state":{"type":"string","description":"State code"},"city":{"type":"string","description":"City name"},"postal_code":{"type":"string","description":"Postal code"}},"required":["street_line_1","country","state","city","postal_code"]},"ExternalAccountResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for external account"},"customer_id":{"type":"string","description":"Customer ID this account belongs to"},"created_at":{"type":"string","description":"Creation timestamp"},"updated_at":{"type":"string","description":"Last update timestamp"},"bank_name":{"type":"string","description":"Bank name"},"account_name":{"type":"string","description":"Account name"},"account_owner_name":{"type":"string","description":"Full name of account owner"},"currency":{"type":"string","enum":["usd","eur","mxn"],"description":"Account currency"},"account_owner_type":{"type":"string","description":"Account owner type"},"account_type":{"type":"string","description":"Account type"},"first_name":{"type":"string","description":"First name of account owner"},"last_name":{"type":"string","description":"Last name of account owner"},"account":{"description":"Bank account details","allOf":[{"$ref":"#/components/schemas/ExternalAccountBankDetails"}]},"address":{"description":"Account holder address","allOf":[{"$ref":"#/components/schemas/ExternalAccountAddress"}]},"beneficiary_address_valid":{"type":"boolean","description":"Whether beneficiary address is valid"}},"required":["id","customer_id","created_at","updated_at","bank_name","account_name","account_owner_name","currency","account_owner_type","account_type","first_name","last_name","account","address"]},"ExternalAccountsListResponseDto":{"type":"object","properties":{"count":{"type":"number","description":"Number of external accounts returned"},"data":{"description":"List of external accounts","type":"array","items":{"$ref":"#/components/schemas/ExternalAccountResponseDto"}}},"required":["count","data"]}}}}